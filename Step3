
## **1Ô∏è‚É£ Install Prometheus and Grafana on EKS**
We'll use **Helm** to deploy **Prometheus** and **Grafana**.

### **Step 1: Install Helm (if not installed)**

curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
chmod +x get_helm.sh
./get_helm.sh


### **Step 2: Add Helm Repositories**

helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update


### **Step 3: Deploy Prometheus and Grafana**

helm install monitoring prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace

This installs:
- **Prometheus**
- **Grafana**
- **Alertmanager**
- **Node Exporter**
- **Kube State Metrics**

### **Step 4: Verify Installation**

kubectl get pods -n monitoring
kubectl get svc -n monitoring


## **2Ô∏è‚É£ Expose Grafana via LoadBalancer**

### **Step 1: Edit the Grafana Service**

kubectl edit svc monitoring-grafana -n monitoring

Change:
```yaml
spec:
  type: LoadBalancer
```
Save and exit.

### **Step 2: Get the LoadBalancer URL**

kubectl get svc monitoring-grafana -n monitoring

Look for the **EXTERNAL-IP** and access Grafana at:

http://<EXTERNAL-IP>:3000


## **3Ô∏è‚É£ Access Prometheus and Grafana**
### **üîπ Get Grafana Credentials**

kubectl get secret --namespace monitoring monitoring-grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo

- **Username**: `admin`
- **Password**: *(from the command above)*

### **üîπ Access Prometheus**

kubectl port-forward svc/monitoring-prometheus 9090 -n monitoring

Visit: [http://localhost:9090](http://localhost:9090)


## **4Ô∏è‚É£ Configure Dashboards in Grafana**
1. **Login to Grafana** at `http://<EXTERNAL-IP>:3000`
2. **Add a Data Source**:
   - Click **"Configuration" ‚Üí "Data Sources"**.
   - Select **Prometheus**.
   - Set **URL** to `http://monitoring-prometheus.monitoring.svc.cluster.local:9090`
   - Click **"Save & Test"**.

3. **Import Pre-built Dashboards**:
   - Click **"Dashboards" ‚Üí "Import"**.
   - Use Dashboard ID **3119** (for Kubernetes monitoring).

